插件标准
============

前言
-----------------
在 `0.4.0` 之前， Xenon 使用了自定义的插件标准，这使得兼容性和可移植成为一大问题。

而且当时的插件标准没有使用 Python 推荐的双下划线属性提供信息，
而是要求每个插件都提供一个 `plugin_spec` 属性。
在思考过后，我们推翻了已有的设计，全面接纳了
`Saya <https://github.com/GraiaProject/Saya>`_ 的优秀设计，
并提供了 Xenon 的独特功能。


全局变量
------------------

以下列举的全局变量均非必须，不过推荐添加

- `__version__`: 应为一个字符串，记录了版本信息

- `__plugin_name__`: 插件实际显示名称，没有则默认为导入路径的最后一段

- `__author__`: 应为一个 字符串 或 可迭代的字符串容器 ，记录了插件的开发者

- `__dependency__`: 应为一个从 `导入路径` 映射至 `PyPI 包名` 的字典，

  若 `PyPI 包名` 不存在则应映射至 一个空字符串。

  `PyPI 包名` 允许使用版本号，但不会被用来进行依赖判断。

  若版本问题很重要，请在插件内自行判断，并在依赖不符合时将 `__raise__` 设置为
  :class:`lib.plugin.DependencyBroken`

- `__raise__`: 导入过程中本来要引发的错误，
  现在只允许设置为 :class:`lib.plugin.DependencyBroken`

要求
------
若插件需要从外部导入库，则 **必须** 在 `__dependency__` 全局变量中标注。

且为了防止引发 `ModuleNotFoundError` 导致 Xenon 无法获取插件信息，
插件必须使用 **局部导入** 。

其余要求与 Saya 的模块一致。
